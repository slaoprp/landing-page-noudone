{"remainingRequest":"/Users/sith/code/slaoprp/startup/noudone/002-front-end/noudone-landing-page/landing-page-noudone/node_modules/babel-loader/lib/index.js!/Users/sith/code/slaoprp/startup/noudone/002-front-end/noudone-landing-page/landing-page-noudone/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sith/code/slaoprp/startup/noudone/002-front-end/noudone-landing-page/landing-page-noudone/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sith/code/slaoprp/startup/noudone/002-front-end/noudone-landing-page/landing-page-noudone/node_modules/vue2-circle-progress/src/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sith/code/slaoprp/startup/noudone/002-front-end/noudone-landing-page/landing-page-noudone/node_modules/vue2-circle-progress/src/index.vue","mtime":1521239497000},{"path":"/Users/sith/code/slaoprp/startup/noudone/002-front-end/noudone-landing-page/landing-page-noudone/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sith/code/slaoprp/startup/noudone/002-front-end/noudone-landing-page/landing-page-noudone/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/sith/code/slaoprp/startup/noudone/002-front-end/noudone-landing-page/landing-page-noudone/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sith/code/slaoprp/startup/noudone/002-front-end/noudone-landing-page/landing-page-noudone/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar $ = require('jquery-easing');\n\nexport default {\n  props: {\n    progress: {\n      type: Number,\n      required: true,\n      default: 0.25\n    },\n    size: {\n      type: Number,\n      required: false,\n      default: 150\n    },\n    startAngle: {\n      type: Number\n    },\n    thickness: {\n      type: Number\n    },\n    percentFontSize: {\n      type: String,\n      required: false,\n      default: function _default() {\n        return (this.size / 4).toString() + \"px\";\n      }\n    },\n    animation: {\n      required: false,\n      default: function _default() {\n        return {\n          duration: 1200,\n          easing: \"circleProgressEasing\"\n        };\n      },\n      validator: function validator(value) {\n        return value instanceof Object || value === false;\n      }\n    },\n    animationStartValue: {\n      type: Number,\n      required: false,\n      default: 0.0\n    },\n    reverse: {\n      type: Boolean,\n      default: false\n    },\n    lineCap: {\n      type: String,\n      default: \"butt\"\n    },\n    fill: {\n      type: Object\n    },\n    emptyFill: {\n      type: String\n    },\n    insertMode: {\n      type: String\n    },\n    showPercent: {\n      type: Boolean,\n      default: true\n    }\n  },\n  mounted: function mounted() {\n    require('jquery-circle-progress');\n\n    var vm = this;\n    $(vm.$el).on('circle-inited', function (event) {\n      renderCircleBody(this, vm.progress / 100);\n      vm.$emit('vue-circle-init', event);\n    }).circleProgress({\n      value: this.convertedProgress(vm.progress),\n      size: vm.size,\n      startAngle: vm.startAngle,\n      reverse: vm.reverse,\n      lineCap: vm.lineCap,\n      fill: vm.fill,\n      emptyFill: vm.emptyFill,\n      animation: vm.animation,\n      animationStartValue: vm.animationStartValue,\n      insertMode: vm.insertMode,\n      thickness: vm.thickness\n    }).on('circle-animation-progress', function (event, progress, stepValue) {\n      renderCircleBody(this, stepValue);\n      vm.$emit('vue-circle-progress', event, progress, stepValue * 100);\n    }).on('circle-animation-end', function (event) {\n      vm.$emit('vue-circle-end', event);\n    });\n\n    function renderCircleBody(self, value) {\n      value = !!value ? value : vm.progress;\n\n      if (vm.showPercent) {\n        $(self).find('span.percent-text').html(Math.floor(value * 100) + \"%\");\n      }\n    }\n  },\n  methods: {\n    convertedProgress: function convertedProgress(progress) {\n      return progress / 100;\n    },\n    updateProgress: function updateProgress(value) {\n      if ($.type(value) === \"number\") {\n        $(this.$el).circleProgress('value', this.convertedProgress(value));\n      } else {\n        console.error(\"Passed Invalid Value. Number Expected. (Hint: use parseInt())\");\n      }\n    },\n    updateFill: function updateFill(fill) {\n      var circle = $(this.$el).data('circle-progress');\n      circle.fill = fill;\n      circle.initFill();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    $(this.$el).remove();\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"circle\">\n    <div class=\"circle-percent-text-body\">\n      <span class=\"percent-text\" :style=\"{ 'font-size': percentFontSize }\"></span>\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nvar $ = require('jquery-easing');\nexport default {\n  props : {\n    progress: {\n        type: Number,\n        required: true,\n        default : 0.25\n    },\n    size: {\n        type: Number,\n        required: false,\n        default : 150\n    },\n    startAngle: {\n        type: Number,\n    },\n    thickness: {\n        type: Number,\n    },\n    percentFontSize: {\n      type: String,\n      required: false,\n      default: function(){\n        return (this.size / 4).toString() + \"px\";\n      }\n    },\n    animation: {\n        required: false,\n        default: function(){\n          return { duration: 1200, easing: \"circleProgressEasing\" };\n        },\n        validator: function(value){\n          return (value instanceof Object || value === false);\n        }\n    },\n    animationStartValue: {\n        type: Number,\n        required: false,\n        default : 0.0\n    },\n    reverse:{\n      type: Boolean,\n      default: false\n    },\n    lineCap: {\n        type: String,\n        default : \"butt\"\n    },\n    fill:{\n      type : Object\n    },\n    emptyFill:{\n      type : String,\n    },\n    insertMode:{\n      type : String,\n    },\n    showPercent:{\n      type : Boolean,\n      default : true\n    },\n  },\n  mounted(){\n    require('jquery-circle-progress');\n    let vm = this;\n    $(vm.$el)\n    .on('circle-inited', function(event){\n      renderCircleBody(this, (vm.progress/100));\n      vm.$emit('vue-circle-init', event);\n    })\n    .circleProgress({\n      value: this.convertedProgress(vm.progress),\n      size: vm.size,\n      startAngle:vm.startAngle,\n      reverse: vm.reverse,\n      lineCap: vm.lineCap,\n      fill: vm.fill,\n      emptyFill: vm.emptyFill,\n      animation: vm.animation,\n      animationStartValue: vm.animationStartValue,\n      insertMode: vm.insertMode,\n      thickness : vm.thickness\n    })\n    .on('circle-animation-progress', function(event,progress,stepValue) {\n      renderCircleBody(this, stepValue);\n      vm.$emit('vue-circle-progress', event,progress,stepValue*100);\n    })\n    .on('circle-animation-end', function(event) {\n      vm.$emit('vue-circle-end', event);\n    });\n\n    function renderCircleBody(self, value){\n      value = !!value ? value : vm.progress;\n      if (vm.showPercent){\n        $(self).find('span.percent-text').html(Math.floor(value*100)+\"%\");\n      }\n    }\n  },\n  methods:{\n    convertedProgress(progress) {\n      return progress/100;\n    },\n    updateProgress(value){\n      if ($.type(value) === \"number\") {\n        $(this.$el).circleProgress('value',this.convertedProgress(value));\n      }else{\n        console.error(\"Passed Invalid Value. Number Expected. (Hint: use parseInt())\")\n      }\n    },\n    updateFill: function(fill){\n      let circle = $(this.$el).data('circle-progress');\n      circle.fill = fill;\n      circle.initFill();\n    },\n  },\n  beforeDestroy: function(){\n    $(this.$el).remove();\n  }\n}\n</script>\n\n<style scoped>\n.circle {\n  position: relative;\n  display: inline-block;\n}\n.circle-percent-text-body {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n.percent-text {\n  font-weight: bold;\n}\n</style>\n"],"sourceRoot":"node_modules/vue2-circle-progress/src"}]}