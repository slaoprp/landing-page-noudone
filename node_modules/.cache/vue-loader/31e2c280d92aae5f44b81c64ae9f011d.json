{"remainingRequest":"/Users/sith/code/slaoprp/startup/noudone/002-front-end/noudone-landing-page/landing-page-noudone/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sith/code/slaoprp/startup/noudone/002-front-end/noudone-landing-page/landing-page-noudone/node_modules/vue2-circle-progress/src/index.vue?vue&type=style&index=0&id=7239a9c8&scoped=true&lang=css&","dependencies":[{"path":"/Users/sith/code/slaoprp/startup/noudone/002-front-end/noudone-landing-page/landing-page-noudone/node_modules/vue2-circle-progress/src/index.vue","mtime":1521239497000},{"path":"/Users/sith/code/slaoprp/startup/noudone/002-front-end/noudone-landing-page/landing-page-noudone/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/sith/code/slaoprp/startup/noudone/002-front-end/noudone-landing-page/landing-page-noudone/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/sith/code/slaoprp/startup/noudone/002-front-end/noudone-landing-page/landing-page-noudone/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/sith/code/slaoprp/startup/noudone/002-front-end/noudone-landing-page/landing-page-noudone/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sith/code/slaoprp/startup/noudone/002-front-end/noudone-landing-page/landing-page-noudone/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.circle {\n  position: relative;\n  display: inline-block;\n}\n.circle-percent-text-body {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n.percent-text {\n  font-weight: bold;\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/vue2-circle-progress/src","sourcesContent":["<template>\n  <div class=\"circle\">\n    <div class=\"circle-percent-text-body\">\n      <span class=\"percent-text\" :style=\"{ 'font-size': percentFontSize }\"></span>\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nvar $ = require('jquery-easing');\nexport default {\n  props : {\n    progress: {\n        type: Number,\n        required: true,\n        default : 0.25\n    },\n    size: {\n        type: Number,\n        required: false,\n        default : 150\n    },\n    startAngle: {\n        type: Number,\n    },\n    thickness: {\n        type: Number,\n    },\n    percentFontSize: {\n      type: String,\n      required: false,\n      default: function(){\n        return (this.size / 4).toString() + \"px\";\n      }\n    },\n    animation: {\n        required: false,\n        default: function(){\n          return { duration: 1200, easing: \"circleProgressEasing\" };\n        },\n        validator: function(value){\n          return (value instanceof Object || value === false);\n        }\n    },\n    animationStartValue: {\n        type: Number,\n        required: false,\n        default : 0.0\n    },\n    reverse:{\n      type: Boolean,\n      default: false\n    },\n    lineCap: {\n        type: String,\n        default : \"butt\"\n    },\n    fill:{\n      type : Object\n    },\n    emptyFill:{\n      type : String,\n    },\n    insertMode:{\n      type : String,\n    },\n    showPercent:{\n      type : Boolean,\n      default : true\n    },\n  },\n  mounted(){\n    require('jquery-circle-progress');\n    let vm = this;\n    $(vm.$el)\n    .on('circle-inited', function(event){\n      renderCircleBody(this, (vm.progress/100));\n      vm.$emit('vue-circle-init', event);\n    })\n    .circleProgress({\n      value: this.convertedProgress(vm.progress),\n      size: vm.size,\n      startAngle:vm.startAngle,\n      reverse: vm.reverse,\n      lineCap: vm.lineCap,\n      fill: vm.fill,\n      emptyFill: vm.emptyFill,\n      animation: vm.animation,\n      animationStartValue: vm.animationStartValue,\n      insertMode: vm.insertMode,\n      thickness : vm.thickness\n    })\n    .on('circle-animation-progress', function(event,progress,stepValue) {\n      renderCircleBody(this, stepValue);\n      vm.$emit('vue-circle-progress', event,progress,stepValue*100);\n    })\n    .on('circle-animation-end', function(event) {\n      vm.$emit('vue-circle-end', event);\n    });\n\n    function renderCircleBody(self, value){\n      value = !!value ? value : vm.progress;\n      if (vm.showPercent){\n        $(self).find('span.percent-text').html(Math.floor(value*100)+\"%\");\n      }\n    }\n  },\n  methods:{\n    convertedProgress(progress) {\n      return progress/100;\n    },\n    updateProgress(value){\n      if ($.type(value) === \"number\") {\n        $(this.$el).circleProgress('value',this.convertedProgress(value));\n      }else{\n        console.error(\"Passed Invalid Value. Number Expected. (Hint: use parseInt())\")\n      }\n    },\n    updateFill: function(fill){\n      let circle = $(this.$el).data('circle-progress');\n      circle.fill = fill;\n      circle.initFill();\n    },\n  },\n  beforeDestroy: function(){\n    $(this.$el).remove();\n  }\n}\n</script>\n\n<style scoped>\n.circle {\n  position: relative;\n  display: inline-block;\n}\n.circle-percent-text-body {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n.percent-text {\n  font-weight: bold;\n}\n</style>\n"]}]}